steps:
  # Install node_modules
  - id: install-dependencies
    name: node:16-alpine
    dir: backend
    entrypoint: npm
    args: 
      - install
  # Generate prisma schema
  - id: prisma-generate
    name: node:16-alpine
    dir: backend
    entrypoint: npx
    args: 
      - prisma
      - generate
  # Create file .env from evironment variable
  - id: build-env
    name: node:16-alpine
    dir: backend
    entrypoint: npm
    args: 
      - run
      - create-env
    env:
      - DATABASE_URL='$_DATABASE_TYPE://$_DATABASE_USER:$_DATABASE_PASSWORD@$_DATABASE_HOST/$_DATABASE_NAME?socket=/cloudsql/$_INSTANCE_CONNECTION_NAME'
  # Build Image from Dockerfile
  - id: build-image
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - .
      - '-f'
      - .infra/Dockerfile
  # Push Image to Cloud Registry
  - id: push-image
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
  # Deploy
  - id: deploy-cloud-run
    name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - '--image=$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    entrypoint: gcloud
  # Build proxy
  - id: build-proxy
    name: "gcr.io/cloud-builders/docker"
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        echo "FROM $_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
        COPY --from=gcr.io/cloud-sql-connectors/cloud-sql-proxy /cloud-sql-proxy /cloudsql/cloud-sql-proxy" > Dockerfile-proxy;
        docker build -f Dockerfile-proxy -t $_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA-proxy .
  # For Unix Socket connections
  - id: migrate-socket
    name: "$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA-proxy"
    env:
      - DATABASE_NAME=$_DATABASE_NAME
      - DATABASE_USER=$_DATABASE_USER
      - INSTANCE_CONNECTION_NAME=$_INSTANCE_CONNECTION_NAME
      - DATABASE_TYPE=$_DATABASE_TYPE
      - DATABASE_PASS=$_DATABASE_PASSWORD
    entrypoint: bash
    args:
      - /cloudsql/cloud-sql-proxy
      - -instances=$_INSTANCE_CONNECTION_NAME=tcp:3306
  # Run Migration
  - id: migration-database
    name: node:16-alpine
    dir: backend
    entrypoint: npx
    args:
      - prisma
      - migrate
      - deploy
images:
  - '$_GCR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
options:
  substitutionOption: ALLOW_LOOSE
substitutions:
  _PLATFORM: managed
  _SERVICE_NAME: nestjs-backend
  _DEPLOY_REGION: asia-northeast1
  _GCR_HOSTNAME: us.gcr.io
  _TRIGGER_ID: a4a9319a-26e8-417c-b537-0fcdfe7a3012
tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - nestjs-backend
